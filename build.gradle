plugins {
	id "architectury-plugin" version "3.4-SNAPSHOT"
	id "dev.architectury.loom" version "1.5-SNAPSHOT" apply false
	id "io.github.pacifistmc.forgix" version "1.2.6"
}

architectury {
	minecraft = rootProject.minecraft_version
}

forgix {
	group = maven_group
	mergedJarName = mod_id
}

subprojects {
	apply plugin: "dev.architectury.loom"

	/*
	loom {
		silentMojangMappingsLicense()
	}
	 */

	dependencies {
		minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
		// The following line declares the mojmap mappings, you may use other mappings as well
		mappings loom.officialMojangMappings()
		// The following line declares the yarn mappings you may select this one as well.
		// mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
	}

	jar {
		manifest {
			attributes([
					"Specification-Title"     : mod_name,
					"Specification-Vendor"    : mod_authors,
					"Specification-Version"   : project.jar.archiveVersion,
					"Implementation-Title"    : project.name,
					"Implementation-Version"  : project.jar.archiveVersion,
					"Implementation-Vendor"   : mod_authors,
					"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
					"Timestampe"              : System.currentTimeMillis(),
					"Built-On-Java"           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
					"Build-On-Minecraft"      : minecraft_version
			])
		}
	}

	build.finalizedBy(mergeJars)
	assemble.finalizedBy(mergeJars)
}

allprojects {
	apply plugin: "java"
	apply plugin: "architectury-plugin"
	apply plugin: "maven-publish"

	base {
		archivesName = rootProject.mod_id
	}

	version = rootProject.mod_version
	group = rootProject.maven_group

	repositories {
		// Add repositories to retrieve artifacts from in here.
		// You should only use this when depending on other mods because
		// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
		// See https://docs.gradle.org/current/userguide/declaring_repositories.html
		// for more information about repositories.
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
		options.release = 17
	}

	java {
		withSourcesJar()
	}
}
